name: Deploy Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: mishadeploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 30m
          script: |
            echo "=== Starting deployment ==="
            
            # Stop old processes
            echo "Stopping old processes..."
            if pgrep -f "python3 mishakrug.py" > /dev/null 2>&1; then
              echo "Found running processes, stopping them..."
              pkill -f "python3 mishakrug.py" || true
              sleep 3
              pkill -9 -f "python3 mishakrug.py" || true
              echo "Processes stopped"
            else
              echo "No running processes found"
            fi
            
            # Go to deployment directory
            echo "Preparing deployment directory..."
            cd /opt
            
            # Backup important files
            if [ -f "mishakrug_tg_bot/.env" ]; then
              echo "Backing up .env file..."
              cp mishakrug_tg_bot/.env /tmp/env_backup 2>/dev/null || true
            fi
            
            if [ -d "mishakrug_tg_bot/venv" ]; then
              echo "Backing up virtual environment..."
              cp -r mishakrug_tg_bot/venv /tmp/venv_backup 2>/dev/null || true
            fi
            
            # Remove old version completely
            echo "Removing old version..."
            rm -rf mishakrug_tg_bot 2>/dev/null || true
            
            # Clone repository fresh
            echo "Cloning repository..."
            git clone https://github.com/devilcrowley/mishakrug_tg_bot.git
            
            if [ ! -d "mishakrug_tg_bot" ]; then
              echo "ERROR: Failed to clone repository"
              exit 1
            fi
            
            cd mishakrug_tg_bot
            
            # Restore .env file
            if [ -f "/tmp/env_backup" ]; then
              echo "Restoring .env file..."
              cp /tmp/env_backup .env
              rm /tmp/env_backup 2>/dev/null || true
            fi
            
            # Setup virtual environment
            if [ -d "/tmp/venv_backup" ]; then
              echo "Restoring virtual environment..."
              cp -r /tmp/venv_backup venv
              rm -rf /tmp/venv_backup 2>/dev/null || true
            else
              echo "Creating new virtual environment..."
              python3 -m venv venv
              if [ ! -d "venv" ]; then
                echo "ERROR: Failed to create virtual environment"
                exit 1
              fi
            fi
            
            # Install dependencies
            echo "Installing dependencies..."
            source venv/bin/activate
            
            if [ -f "requirements.txt" ]; then
              pip install -r requirements.txt
              if [ $? -ne 0 ]; then
                echo "ERROR: Failed to install dependencies"
                exit 1
              fi
            fi
            
            # Start bot
            echo "Starting bot..."
            nohup python3 mishakrug.py > mishakrug.log 2>&1 &
            
            # Wait and check if started
            sleep 5
            if pgrep -f "python3 mishakrug.py" > /dev/null; then
              echo "SUCCESS: Bot started successfully!"
              echo "PID: $(pgrep -f 'python3 mishakrug.py')"
              echo "Deployment completed!"
            else
              echo "ERROR: Bot failed to start!"
              if [ -f "mishakrug.log" ]; then
                echo "Last 20 lines of log:"
                tail -20 mishakrug.log
              fi
              exit 1
            fi
