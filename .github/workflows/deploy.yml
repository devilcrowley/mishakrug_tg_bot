name: Deploy Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Позволяет запускать workflow вручную

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Debug secrets
        run: |
          if [ -z "${{ secrets.SERVER_HOST }}" ]; then
            echo "Error: SERVER_HOST is not set"
            exit 1
          fi
          echo "SERVER_HOST is configured"

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: mishadeploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 30m
          script: |
            echo "Setup deployment directory..."
            cd /opt/mishakrug_tg_bot || { echo "Failed to cd into /opt/mishakrug_tg_bot"; exit 1; }
            sleep 5

            # Улучшенная остановка процессов
            stop_process() {
              echo "Поиск процессов..."
              # Точное совпадение имени процесса
              pids=$(ps aux | grep "python3 mishakrug.py" | grep -v grep | awk '{print $2}' || true)
              
              if [ -n "$pids" ]; then
                echo "Найдены процессы: $pids"
                echo "Отправка SIGTERM..."
                kill $pids || true
                
                # Ожидание завершения с таймаутом
                timeout=10
                while [ $timeout -gt 0 ]; do
                  if ! ps aux | grep "python3 mishakrug.py" | grep -v grep >/dev/null; then
                    break
                  fi
                  sleep 1
                  ((timeout--))
                done
                
                if [ $timeout -eq 0 ]; then
                  echo "Принудительное завершение..."
                  kill -9 $pids || true
                  sleep 3
                fi
              fi
              
              # Финальная проверка
              if ps aux | grep "python3 mishakrug.py" | grep -v grep; then
                echo "ОШИБКА: Процессы остались!"
                exit 1
              fi
            }
          
            # Вызов функции остановки
            stop_process

            # Сохраняем .env во временный файл
            if [ -f .env ]; then
              echo "Сохраняем .env файл..."
              cp .env /tmp/mishakrug_env_backup
            fi

            # Исправляем права доступа к Git-репозиторию
            echo "Исправляем права доступа к Git-репозиторию..."
            if command -v sudo >/dev/null 2>&1; then
              sudo chown -R mishadeploy:mishadeploy /opt/mishakrug_tg_bot/.git || echo "Не удалось изменить владельца через sudo"
              sudo chmod -R 755 /opt/mishakrug_tg_bot/.git || echo "Не удалось изменить права через sudo"
            else
              echo "sudo недоступен, пытаемся исправить права напрямую..."
              chown -R mishadeploy:mishadeploy /opt/mishakrug_tg_bot/.git 2>/dev/null || echo "Не удалось изменить владельца"
              chmod -R 755 /opt/mishakrug_tg_bot/.git 2>/dev/null || echo "Не удалось изменить права"
            fi
            
            # Очищаем папку (кроме .git и venv)
            echo "Очищаем папку..."
            shopt -s extglob
            rm -rf !(.git|venv|.env)

            # Восстанавливаем .env
            if [ -f /tmp/mishakrug_env_backup ]; then
              echo "Восстанавливаем .env файл..."
              mv /tmp/mishakrug_env_backup .env
            fi
          
            # Обновление и запуск
            echo "Выполняем git операции..."
            git config --global --add safe.directory /opt/mishakrug_tg_bot
            
            # Пытаемся выполнить git операции с обработкой ошибок
            if ! git fetch origin; then
              echo "Ошибка при выполнении git fetch, пытаемся исправить..."
              git config --global user.email "mishadeploy@github.local"
              git config --global user.name "mishadeploy"
              git remote set-url origin $(git remote get-url origin)
              git fetch origin || { echo "Критическая ошибка git fetch"; exit 1; }
            fi
            
            if ! git reset --hard origin/main; then
              echo "Ошибка при выполнении git reset, пытаемся альтернативный способ..."
              git checkout main || git checkout -b main origin/main
              git pull origin main || { echo "Критическая ошибка обновления кода"; exit 1; }
            fi
            
            git clean -fd || echo "Предупреждение: не удалось очистить рабочую директорию"
            
            # Проверяем и создаем виртуальное окружение если необходимо
            if [ ! -d "venv" ]; then
              echo "Создаем виртуальное окружение..."
              python3 -m venv venv || { echo "Ошибка создания venv"; exit 1; }
            fi
            
            echo "Активируем виртуальное окружение и устанавливаем зависимости..."
            source venv/bin/activate
            
            # Устанавливаем зависимости если есть requirements.txt
            if [ -f "requirements.txt" ]; then
              pip install -r requirements.txt || echo "Предупреждение: не удалось установить зависимости"
            fi
            
            echo "Запускаем бота..."
            nohup python3 mishakrug.py > mishakrug.log 2>&1 &
          
            # Проверка запуска
            sleep 3
            if ! ps aux | grep "python3 mishakrug.py" | grep -v grep >/dev/null; then
              echo "ОШИБКА: Процесс не запустился!"
              exit 1
            fi
          
            echo "Деплой успешно завершён!"
